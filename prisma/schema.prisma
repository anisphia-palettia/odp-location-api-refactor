generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id       Int     @id @default(autoincrement()) @map("id")
  name     String  @map("name")
  chatCode String  @unique @map("chat_code")
  show     Boolean @default(true)

  coordinates Coordinate[]
  errors      Error[]

  @@map("groups")
}

model Coordinate {
  id         Int      @id @default(autoincrement()) @map("id")
  imageName  String?  @map("image_name")
  lng        Decimal  @map("lng") @db.Decimal(9, 6)
  lat        Decimal  @map("lat") @db.Decimal(9, 6)
  address    String?  @map("address")
  photoCode  String?  @map("photo_code")
  isAccepted Boolean? @map("is_accepted")

  reportedAt   DateTime? @map("reported_at")
  photoTakenAt DateTime  @default(now()) @map("photo_taken_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")

  groupId Int? @map("group_id")
  poleId  Int? @map("pole_id")

  pole  Pole?  @relation(fields: [poleId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  group Group? @relation(fields: [groupId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([groupId])
  @@index([poleId])
  @@map("coordinates")
}

model Error {
  id        Int       @id @default(autoincrement()) @map("id")
  url       String    @map("url")
  done      Boolean   @default(false) @map("done")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  groupId Int?   @map("group_id")
  group   Group? @relation(fields: [groupId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@index([groupId])
  @@map("errors")
}

model Pole {
  id          Int          @id @default(autoincrement()) @map("id")
  name        String       @map("name")
  coordinates Coordinate[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("poles")
}
