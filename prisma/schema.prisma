generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id          Int          @id @default(autoincrement()) @map("id")
  name        String       @map("name")
  chatId      String       @unique @map("chat_id")
  show        Boolean      @default(true)
  coordinates Coordinate[] @relation("group_coordinates")
  errors      Error[]      @relation("group_erros")

  @@map("group")
}

model Coordinate {
  id           Int       @id @default(autoincrement()) @map("id")
  imageName    String?   @map("image_name")
  long         String    @map("long")
  lat          String    @map("lat")
  address      String?   @map("address")
  photoCode    String?   @map("photo_code")
  isAccepted   Boolean   @default(false) @map("is_accepted")
  isReject     Boolean   @default(false) @map("is_reject")
  photoTakenAt DateTime  @default(now()) @map("photo_taken_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")

  groupId Int?   @map("group_id")
  group   Group? @relation("group_coordinates", fields: [groupId], references: [id])
  tiangId Int?
  tiang   Tiang? @relation(fields: [tiangId], references: [id])

  @@map("coordinate")
}

model Error {
  id        Int       @id @default(autoincrement()) @map("id")
  url       String    @map("url")
  done      Boolean   @default(false) @map("done")
  groupId   Int?      @map("group_id")
  group     Group?    @relation("group_erros", fields: [groupId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("error")
}

model Tiang {
  id          Int          @id @default(autoincrement()) @map("id")
  name        String       @map("name")
  coordinates Coordinate[]
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime?    @updatedAt @map("updated_at")
}
